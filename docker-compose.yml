
services:
  user-service:
    build:
      context: ./backend/microservices/user-service
      dockerfile: Dockerfile
    image: anupshetty44/user-service
    ports:
      - "5277:80"  # map external port 5277 to container port 80
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    depends_on:
      - email-service
    networks:
      - microservices-network

  email-service:
    build:
      context: ./backend/microservices/email-service
      dockerfile: Dockerfile
    image: anupshetty44/email-service
    ports:
      - "5255:80"  # map external port 5255 to container port 80
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    depends_on:
      - strapi-service
    networks:
      - microservices-network

  # Optional services (inventory, order)
  # inventory-service:
  #   build:
  #     context: ./backend/microservices/inventory-service
  #     dockerfile: Dockerfile
  #   image: anupshetty44/inventory-service
  #   ports:
  #     - "5280:80"
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Development
  #     - ASPNETCORE_URLS=http://+:80
  #   depends_on:
  #     - user-service
  #     - order-service

  # order-service:
  #   build:
  #     context: ./backend/microservices/order-service
  #     dockerfile: Dockerfile
  #   image: anupshetty44/order-service
  #   ports:
  #     - "5281:80"
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Development
  #     - ASPNETCORE_URLS=http://+:80
  #   depends_on:
  #     - user-service
  #     - inventory-service

  postgres:
    image: postgres:13
    environment:
      POSTGRES_DB: strapi
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Welcome@123
    volumes:
      - ./backend/microservices/strapi-cms-service/database:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  strapi-service:
    image: strapi/strapi
    build:
      context: ./backend/microservices/strapi-cms-service
    ports:
      - "1337:1337" # Strapi runs on port 1337 by default
    environment:
      DATABASE_CLIENT: postgres
      DATABASE_HOST: localhost
      DATABASE_PORT: 5432
      DATABASE_NAME: strapi
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: Welcome@123
      NODE_ENV: development
    depends_on:
      - postgres
    volumes:
      - ./backend/microservices/strapi-cms-service:/srv/app
    command: strapi develop --debug

  frontend:
    build:
      context: ./frontend/vanilla
      dockerfile: Dockerfile
    image: node:16  # Node 16 image for React
    ports:
      - "3000:3000"  # React runs on port 3000
    environment:
      - NODE_ENV=development
    volumes:
      - ./frontend/vanilla:/app
    working_dir: /app
    command: ["npm", "start"]
    depends_on:
      - user-service
      - email-service
    networks:
      - microservices-network

  api-gateway:
    build:
      context: ./api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - user-service
      - email-service
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge
